version: '2'
services:
  main:
    build: .
    image: opuscapita/earchive:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
      - rabbitmq
      - acl
    labels:
      SERVICE_NAME: 'earchive'
      SERVICE_TAGS: 'external'
    environment:
      NODE_ENV: ${NODE_ENV}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      REDIS_AUTH: ${REDIS_AUTH}
      SERVICE_3031_NAME: earchive 
      SERVICE_3031_CHECK_HTTP: /api/health/check
      SERVICE_3031_CHECK_INTERVAL: 15s
      SERVICE_3031_CHECK_TIMEOUT: 3s
    ports:
      - '${PORT}:${PORT}'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '4369:4369'
      - '5671:5671'
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      SERVICE_5672_NAME: 'rabbitmq-amqp'

  acl:
    image: opuscapita/acl:dev
    labels:
      - 'SERVICE_NAME=acl'
      - 'SERVICE_TAGS=external,kong'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      TEST_USER_KEY: test
      SERVICE_3013_CHECK_HTTP: /api/health/check
      SERVICE_3013_CHECK_INTERVAL: 15s
      SERVICE_3013_CHECK_TIMEOUT: 3s
    ports:
     - '3013:3013'
    depends_on:
      - registrator
      - mysql
    command: 'npm run dev'

  mysql:
    image: 'mysql:5.7'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    depends_on:
      - registrator

  registrator:
    image: gliderlabs/registrator
    command: consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul

  redis:
    image: opuscapita/redis:dev
    ports:
      - '6379:6379'
    environment:
      REDIS_AUTH: ${REDIS_AUTH}
    depends_on:
      - registrator

  consul:
    image: consul:latest
    ports:
      - '8400:8400'
      - '8500:8500'
      - '8600:53/udp'
    labels:
      SERVICE_IGNORE: 'true'  # Do not add any of Consul's services to Consul's service discovery registry.
    command: [agent, '-server', '-ui', '-bootstrap', '-client=0.0.0.0']
